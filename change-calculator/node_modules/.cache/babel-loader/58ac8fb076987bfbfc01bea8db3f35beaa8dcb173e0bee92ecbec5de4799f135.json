{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pante\\\\JPhack\\\\Guild_07\\\\change-calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from \"react\";\nimport MainScreen from \"./components/MainScreen\";\nimport ResultScreen from \"./components/ResultScreen\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [amount, setAmount] = useState(\"\");\n  const [currencyCounts, setCurrencyCounts] = useState({});\n\n  // 通貨の計算関数\n  const calculateCurrency = (value, overrideCounts = {}) => {\n    const denominations = [10000, 5000, 1000, 500, 100, 50, 10, 5, 1];\n    let remaining = value;\n    const counts = {};\n\n    // オーバーライドされた枚数を適用\n    Object.keys(overrideCounts).forEach(denom => {\n      const denomValue = parseInt(denom, 10);\n      const count = overrideCounts[denom];\n      counts[denom] = count;\n      remaining -= denomValue * count;\n    });\n    if (remaining < 0) {\n      alert(\"選択された枚数により金額が超過しています。調整してください。\");\n      return;\n    }\n\n    // 残りの金額を計算\n    denominations.forEach(denom => {\n      if (overrideCounts[denom]) {\n        return; // オーバーライドされた場合はスキップ\n      }\n      counts[denom] = Math.floor(remaining / denom);\n      remaining %= denom;\n    });\n    setCurrencyCounts(counts);\n  };\n\n  // 通貨変換ボタン押下時のハンドラー\n  const handleConvert = () => {\n    const numericAmount = parseInt(amount, 10);\n    if (isNaN(numericAmount) || numericAmount < 0) {\n      alert(\"有効な金額を入力してください。\");\n      return;\n    }\n    calculateCurrency(numericAmount);\n  };\n\n  // 「+」ボタン押下時のハンドラー\n  const handleIncrease = denom => {\n    const numericAmount = parseInt(amount, 10);\n    if (isNaN(numericAmount) || numericAmount < 0) {\n      alert(\"有効な金額を入力してください。\");\n      return;\n    }\n    const currentCount = currencyCounts[denom] || 0;\n    const newCount = currentCount + 1;\n    const newOverrideCounts = {\n      ...currencyCounts,\n      [denom]: newCount\n    };\n    calculateCurrency(numericAmount, newOverrideCounts);\n  };\n\n  // 「-」ボタン押下時のハンドラー\n  const handleDecrease = denom => {\n    const numericAmount = parseInt(amount, 10);\n    if (isNaN(numericAmount) || numericAmount < 0) {\n      alert(\"有効な金額を入力してください。\");\n      return;\n    }\n    const currentCount = currencyCounts[denom] || 0;\n    if (currentCount <= 0) return; // 0枚以下にはしない\n\n    const newCount = currentCount - 1;\n    const newOverrideCounts = {\n      ...currencyCounts\n    };\n    if (newCount === 0) {\n      delete newOverrideCounts[denom];\n    } else {\n      newOverrideCounts[denom] = newCount;\n    }\n    calculateCurrency(numericAmount, newOverrideCounts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !currencyCounts || Object.keys(currencyCounts).length === 0 ? /*#__PURE__*/_jsxDEV(MainScreen, {\n      amount: amount,\n      setAmount: setAmount,\n      onConvert: handleConvert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ResultScreen, {\n      amount: amount,\n      currencyCounts: currencyCounts,\n      onBack: () => setCurrencyCounts({}),\n      handleIncrease: handleIncrease,\n      handleDecrease: handleDecrease\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g2LaZEyNuiOrwE8qpNXwKvBov/8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MainScreen","ResultScreen","jsxDEV","_jsxDEV","App","_s","amount","setAmount","currencyCounts","setCurrencyCounts","calculateCurrency","value","overrideCounts","denominations","remaining","counts","Object","keys","forEach","denom","denomValue","parseInt","count","alert","Math","floor","handleConvert","numericAmount","isNaN","handleIncrease","currentCount","newCount","newOverrideCounts","handleDecrease","className","children","length","onConvert","fileName","_jsxFileName","lineNumber","columnNumber","onBack","_c","$RefreshReg$"],"sources":["C:/Users/pante/JPhack/Guild_07/change-calculator/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from \"react\";\nimport MainScreen from \"./components/MainScreen\";\nimport ResultScreen from \"./components/ResultScreen\";\nimport \"./App.css\";\n\nfunction App() {\n  const [amount, setAmount] = useState(\"\");\n  const [currencyCounts, setCurrencyCounts] = useState({});\n\n\n  // 通貨の計算関数\n  const calculateCurrency = (value, overrideCounts = {}) => {\n    const denominations = [10000, 5000, 1000, 500, 100, 50, 10, 5, 1];\n    let remaining = value;\n    const counts = {};\n\n    // オーバーライドされた枚数を適用\n    Object.keys(overrideCounts).forEach((denom) => {\n      const denomValue = parseInt(denom, 10);\n      const count = overrideCounts[denom];\n      counts[denom] = count;\n      remaining -= denomValue * count;\n    });\n\n    if (remaining < 0) {\n      alert(\"選択された枚数により金額が超過しています。調整してください。\");\n      return;\n    }\n\n    // 残りの金額を計算\n    denominations.forEach((denom) => {\n      if (overrideCounts[denom]) {\n        return; // オーバーライドされた場合はスキップ\n      }\n      counts[denom] = Math.floor(remaining / denom);\n      remaining %= denom;\n    });\n\n    setCurrencyCounts(counts);\n  };\n\n  // 通貨変換ボタン押下時のハンドラー\n  const handleConvert = () => {\n    const numericAmount = parseInt(amount, 10);\n    if (isNaN(numericAmount) || numericAmount < 0) {\n      alert(\"有効な金額を入力してください。\");\n      return;\n    }\n    calculateCurrency(numericAmount);\n  };\n\n  // 「+」ボタン押下時のハンドラー\n  const handleIncrease = (denom) => {\n    const numericAmount = parseInt(amount, 10);\n    if (isNaN(numericAmount) || numericAmount < 0) {\n      alert(\"有効な金額を入力してください。\");\n      return;\n    }\n\n    const currentCount = currencyCounts[denom] || 0;\n    const newCount = currentCount + 1;\n    const newOverrideCounts = { ...currencyCounts, [denom]: newCount };\n    calculateCurrency(numericAmount, newOverrideCounts);\n  };\n\n  // 「-」ボタン押下時のハンドラー\n  const handleDecrease = (denom) => {\n    const numericAmount = parseInt(amount, 10);\n    if (isNaN(numericAmount) || numericAmount < 0) {\n      alert(\"有効な金額を入力してください。\");\n      return;\n    }\n\n    const currentCount = currencyCounts[denom] || 0;\n    if (currentCount <= 0) return; // 0枚以下にはしない\n\n    const newCount = currentCount - 1;\n    const newOverrideCounts = { ...currencyCounts };\n    if (newCount === 0) {\n      delete newOverrideCounts[denom];\n    } else {\n      newOverrideCounts[denom] = newCount;\n    }\n    calculateCurrency(numericAmount, newOverrideCounts);\n  };\n\n\n  return (\n    <div className=\"App\">\n      {!currencyCounts || Object.keys(currencyCounts).length === 0 ? (\n        <MainScreen\n          amount={amount}\n          setAmount={setAmount}\n          onConvert={handleConvert}\n        />\n      ) : (\n        <ResultScreen\n          amount={amount}\n          currencyCounts={currencyCounts}\n          onBack={() => setCurrencyCounts({})}\n          handleIncrease={handleIncrease}\n          handleDecrease={handleDecrease}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}